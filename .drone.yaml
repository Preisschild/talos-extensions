---
kind: pipeline
name: default
type: kubernetes

steps:
  - name: setup-ci
    image: autonomy/build-container:latest
    commands:
      - git fetch --tags
      - install-ci-key
      - setup-buildx-amd64-arm64
    environment:
      SSH_KEY:
        from_secret: ssh_key
      DOCKER_CLI_EXPERIMENTAL: enabled
    resources:
      requests:
        cpu: 24000
        memory: 48GiB
    volumes:
      - name: outer-docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx

  - name: build-pull-request
    image: autonomy/build-container:latest
    pull: always
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
    commands:
      - make
    when:
      event:
        include:
          - pull_request
    volumes:
      - name: outer-docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    depends_on:
      - setup-ci

  - name: build-nonfree-pull-request
    image: autonomy/build-container:latest
    pull: always
    environment:
      DOCKER_CLI_EXPERIMENTAL: enabled
    commands:
      - make nonfree
    when:
      event:
        include:
          - pull_request
    volumes:
      - name: outer-docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    depends_on:
      - build-pull-request

  - name: build-and-publish
    image: autonomy/build-container:latest
    pull: always
    environment:
      GHCR_USERNAME:
        from_secret: ghcr_username
      GHCR_PASSWORD:
        from_secret: ghcr_token
    commands:
      - docker login ghcr.io --username "$${GHCR_USERNAME}" --password "$${GHCR_PASSWORD}"
      - make PUSH=true
      - make nonfree PUSH=true
      - make extensions PUSH=true
    when:
      event:
        exclude:
          - pull_request
          - promote
    volumes:
      - name: outer-docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    depends_on:
      - setup-ci

  - name: e2e-talos
    image: autonomy/build-container:latest
    pull: always
    environment:
      AZURE_STORAGE_ACCOUNT:
        from_secret: 'az_storage_account'
      AZURE_STORAGE_USER:
        from_secret: 'az_storage_user'
      AZURE_STORAGE_PASS:
        from_secret: 'az_storage_pass'
      AZURE_TENANT:
        from_secret: 'az_tenant'
    commands:
      - az login --service-principal -u "$${AZURE_STORAGE_USER}" -p "$${AZURE_STORAGE_PASS}" --tenant "$${AZURE_TENANT}"
      - make all extensions-metadata PUSH=true
      - az storage blob upload --overwrite -f _out/extensions-metadata -n extensions-metadata -c "$${BUCKET_PATH}"
    when:
      event:
        - promote
      target:
        - e2e-talos
    volumes:
      - name: outer-docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    depends_on:
      - setup-ci

  - name: release-notes
    image: autonomy/build-container:latest
    pull: always
    commands:
      - make release-notes
    volumes:
      - name: docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    when:
      event:
        - tag
    depends_on:
      - build-and-publish

  - name: release
    image: plugins/github-release
    pull: always
    settings:
      api_key:
        from_secret: github_token
      checksum:
        - sha256
        - sha512
      draft: true
      files:
        - _out/RELEASE_NOTES.md
      note: _out/RELEASE_NOTES.md
    volumes:
      - name: docker-socket
        path: /var/run
      - name: ssh
        path: /root/.ssh
      - name: buildx
        path: /root/.docker/buildx
    when:
      event:
        - tag
    depends_on:
      - release-notes

services:
- name: docker
  image: docker:20.10-dind
  entrypoint:
  - dockerd
  commands:
  - --dns=8.8.8.8
  - --dns=8.8.4.4
  - --mtu=1500
  - --log-level=error
  privileged: true
  volumes:
  - name: docker-socket
    path: /var/run
  - name: buildx
    path: /root/.docker/buildx
  - name: ssh
    path: /root/.ssh

volumes:
  - name: outer-docker-socket
    host:
      path: /var/ci-docker
  - name: docker-socket
    temp:
      medium: memory
  - name: buildx
    temp:
      medium: memory
  - name: ssh
    temp:
      medium: memory

trigger:
  branch:
    exclude:
    - renovate/*
    - dependabot/*

---
kind: pipeline
type: kubernetes
name: notify

clone:
  disable: true

steps:
  - name: slack
    image: plugins/slack
    settings:
      webhook:
        from_secret: slack_webhook
      channel: proj-talos-maintainers
    when:
      status:
        - success
        - failure

trigger:
  branch:
    exclude:
    - renovate/*
    - dependabot/*
  status:
  - success
  - failure

depends_on:
  - default
